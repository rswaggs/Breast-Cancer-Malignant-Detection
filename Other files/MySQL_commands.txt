CREATE TABLE train_data (
  id BIGINT AUTO_INCREMENT,
  upload_notes_id INT NOT NULL,
  diagnosis CHAR(1) NOT NULL,
  radius_mean DECIMAL(11,5),
  texture_mean DECIMAL(11,5),
  perimeter_mean DECIMAL(11,5),
  area_mean DECIMAL(11,5),
  smoothness_mean DECIMAL(11,5),
  compactness_mean DECIMAL(11,5),
  concavity_mean DECIMAL(11,5),
  concave_points_mean DECIMAL(11,5),
  symmetry_mean DECIMAL(11,5),
  fractal_dimension_mean DECIMAL(11,5),
  PRIMARY KEY (id),
  FOREIGN KEY (upload_notes_id) REFERENCES data_upload_notes(id)
);

------------------------------

CREATE TABLE `data_upload_notes` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `clinician_id` INT NOT NULL,     	  (Foreign key when other table is available)
  `upload_time` datetime NOT NULL,
  `source_notes` varchar(500) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

------------------------------

CREATE TABLE `model_update` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `clinician_id` INT NOT NULL,
  `update_time` datetime NOT NULL,
  `criterion` varchar(7) NOT NULL,
  `splitter` varchar(6) NOT NULL,
  `max_depth` varchar(4) NOT NULL,
  `min_samples_split` varchar(10) NOT NULL,
  `min_samples_leaf` varchar(10) NOT NULL,
  `min_weight_fraction_leaf` varchar(10) NOT NULL,
  `max_features` varchar(10) NOT NULL,
  `random_state` varchar(10) NOT NULL,
  `max_leaf_nodes` varchar(4) NOT NULL,
  `min_impurity_decrease` varchar(10) NOT NULL,
  `class_weight` varchar(500) NOT NULL,
  `presort` varchar(5) NOT NULL
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

=============================

DELIMITER $$
CREATE PROCEDURE AddToTrainData(
	IN entry_upload_notes_id INT,
  	IN entry_diagnosis CHAR(1),
  	IN entry_radius_mean DECIMAL(11,5),
  	IN entry_texture_mean DECIMAL(11,5),
  	IN entry_perimeter_mean DECIMAL(11,5),
  	IN entry_area_mean DECIMAL(11,5),
  	IN entry_smoothness_mean DECIMAL(11,5),
  	IN entry_compactness_mean DECIMAL(11,5),
  	IN entry_concavity_mean DECIMAL(11,5),
  	IN entry_concave_points_mean DECIMAL(11,5),
  	IN entry_symmetry_mean DECIMAL(11,5),
  	IN entry_fractal_dimension_mean DECIMAL(11,5)
)
	BEGIN
		INSERT INTO train_data
		(
			upload_notes_id,
  			diagnosis,
  			radius_mean,
  			texture_mean,
  			perimeter_mean,
  			area_mean,
  			smoothness_mean,
  			compactness_mean,
  			concavity_mean,
  			concave_points_mean,
  			symmetry_mean,
  			fractal_dimension_mean
		)
		VALUES
		(
			entry_upload_notes_id,
  			entry_diagnosis,
  			entry_radius_mean,
  			entry_texture_mean,
  			entry_perimeter_mean,
  			entry_area_mean,
  			entry_smoothness_mean,
  			entry_compactness_mean,
  			entry_concavity_mean,
  			entry_concave_points_mean,
  			entry_symmetry_mean,
  			entry_fractal_dimension_mean
		);

	END $$
DELIMITER ;

------------------------------

DELIMITER $$
CREATE PROCEDURE GetTrainData()
	BEGIN
		SELECT 	diagnosis,
  			radius_mean,
  			texture_mean,
  			perimeter_mean,
  			area_mean,
  			smoothness_mean,
  			compactness_mean,
  			concavity_mean,
  			concave_points_mean,
  			symmetry_mean,
  			fractal_dimension_mean 
		FROM train_data;
	END $$
DELIMITER ;

------------------------------

DELIMITER $$
CREATE PROCEDURE AddToUploadNotes(
	IN entry_clinician_id INT,
  	IN entry_upload_time datetime,
  	IN entry_source_notes varchar(500)
)
	BEGIN
		INSERT INTO data_upload_notes
		(
			clinician_id,
  			upload_time,
  			source_notes
		)
		VALUES
		(
			entry_clinician_id,
  			entry_upload_time,
  			entry_source_notes
		);

	END $$
DELIMITER ;

------------------------------

## Grabs the last inserted row ID for the database. Will grab the update notes ID ##immediately after the row is inserted
DELIMITER $$
CREATE PROCEDURE GetUploadNotesMostRecentID()
	BEGIN
		SELECT LAST_INSERT_ID();
	END $$
DELIMITER ;

------------------------------

DELIMITER $$
CREATE PROCEDURE GetUploadNotes()
	BEGIN
		SELECT * FROM data_upload_notes
		ORDER BY upload_time DESC
		LIMIT 10;
	END $$
DELIMITER ;

------------------------------

## Get last set of model parameters used
DELIMITER $$
CREATE PROCEDURE GetLatestModelParameters()
	BEGIN
		SELECT * FROM model_update
		ORDER BY update_time DESC
		LIMIT 1;
	END $$
DELIMITER ;

------------------------------

## AddToModelUpdates
DELIMITER $$
CREATE PROCEDURE AddToModelUpdates(
	IN entry_clinician_id INT,
  	IN entry_criterion varchar(7),
  	IN entry_splitter varchar(6),
  	IN entry_max_depth varchar(4),
  	IN entry_min_samples_split varchar(10),
  	IN entry_min_samples_leaf varchar(10),
  	IN entry_min_weight_fraction_leaf varchar(10),
  	IN entry_max_features varchar(10),
  	IN entry_random_state varchar(10),
  	IN entry_max_leaf_nodes varchar(4),
  	IN entry_min_impurity_decrease varchar(10),
  	IN entry_class_weight varchar(500),
  	IN entry_presort varchar(5)
)
	BEGIN
		INSERT INTO model_update
		(
			clinician_id,
  			update_time,
  			criterion,
  			splitter,
  			max_depth,
  			min_samples_split,
  			min_samples_leaf,
  			min_weight_fraction_leaf,
  			max_features,
  			random_state,
  			max_leaf_nodes,
  			min_impurity_decrease,
  			class_weight,
  			presort
		)
		VALUES
		(
			entry_clinician_id,
  			NOW(),
  			entry_criterion,
  			entry_splitter,
  			entry_max_depth,
  			entry_min_samples_split,
  			entry_min_samples_leaf,
  			entry_min_weight_fraction_leaf,
  			entry_max_features,
  			entry_random_state,
  			entry_max_leaf_nodes,
  			entry_min_impurity_decrease,
  			entry_class_weight,
  			entry_presort
		);

	END $$
DELIMITER ;

